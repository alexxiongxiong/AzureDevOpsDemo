# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml



trigger:
- none

stages:
  - stage: Build 
    displayName: Build stage  
    jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: ubuntu-latest
      steps:
##Use bash to configure DevOps agent


##Use docker to build image and push into acr
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          containerRegistry: 'alexrampuptest'
          repository: 'alexramuptest20230209'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: latest

#get approval before deploying


#start deploying stage
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
    - deployment: Deploy
      displayName: Deploy job
      pool:
        vmImage: ubuntu-latest
      environment: 'myenv.azuredevopsapp' #customize with your environment
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self

##deploy application/service into AKS
###if main version, deploy to prod environment.
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'cniaks-admin-kubeconfig'
                namespace: 'azuredevopsapp'
                manifests: |
                  $(Build.SourcesDirectory)/manifests/deployment.yaml
                  $(Build.SourcesDirectory)/manifests/service.yaml
                containers : |
                  $(containerRegistry).azurecr.io/$(imageRepository):latest